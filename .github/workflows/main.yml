jobs:
  build-jdk11:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      id: version
      name: get tag name
      run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - continue-on-error: true
      name: build with maven
      run: mvn --batch-mode --define java.net.useSystemProxies=true package
    - continue-on-error: true
      name: create renamed build
      run: cp target/plantuml.war target/plantuml-${{ steps.version.outputs.VERSION
        }}.war
    - continue-on-error: true
      name: build with maven (including the apache-jsp artifact)
      run: mvn --batch-mode --define java.net.useSystemProxies=true -Dapache-jsp.scope=compile
        package
    - continue-on-error: true
      name: create renamed build (including the apache-jsp artifact)
      run: cp target/plantuml.war target/plantuml-jsp-${{ steps.version.outputs.VERSION
        }}.war
    - continue-on-error: true
      name: temporarily save generated war files
      uses: actions/upload-artifact@v3
      with:
        name: war-jre11
        path: target/plantuml*-${{ steps.version.outputs.VERSION }}.war
  build-jdk8:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      id: version
      name: get tag name
      run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - continue-on-error: true
      name: Remove test code (not java 8 compatible)
      run: rm -rf src/test
    - continue-on-error: true
      name: build with maven
      run: mvn --batch-mode -f pom.jdk8.xml --define java.net.useSystemProxies=true
        package
    - continue-on-error: true
      name: create renamed build
      run: cp target/plantuml.war target/plantuml-jre8-${{ steps.version.outputs.VERSION
        }}.war
    - continue-on-error: true
      name: build with maven (including the apache-jsp artifact)
      run: mvn --batch-mode -f pom.jdk8.xml --define java.net.useSystemProxies=true
        -Dapache-jsp.scope=compile package
    - continue-on-error: true
      name: create renamed build (including the apache-jsp artifact)
      run: cp target/plantuml.war target/plantuml-jre8-jsp-${{ steps.version.outputs.VERSION
        }}.war
    - continue-on-error: true
      name: temporarily save generated war files
      uses: actions/upload-artifact@v3
      with:
        name: war-jre8
        path: target/plantuml*-${{ steps.version.outputs.VERSION }}.war
  publish-docker:
    needs:
    - publish-releases
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      id: docker_meta_tomcat
      name: Docker tomcat meta
      uses: crazy-max/ghaction-docker-meta@v3
      with:
        flavor: 'latest=false

          prefix=

          suffix=

          '
        images: plantuml/plantuml-server
        tags: 'type=semver,pattern=tomcat-{{raw}}

          type=raw,value=tomcat

          '
    - continue-on-error: true
      id: docker_meta_jetty
      name: Docker jetty meta
      uses: crazy-max/ghaction-docker-meta@v3
      with:
        flavor: 'latest=true

          prefix=

          suffix=

          '
        images: plantuml/plantuml-server
        tags: 'type=semver,pattern={{raw}}

          type=semver,pattern=jetty-{{raw}}

          type=raw,value=jetty

          '
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - continue-on-error: true
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      id: docker_build_tomcat
      name: Build & push tomcat
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.tomcat
        labels: ${{ steps.docker_meta_tomcat.outputs.labels }}
        platforms: linux/amd64, linux/arm64
        push: false
        tags: ${{ steps.docker_meta_tomcat.outputs.tags }}
    - continue-on-error: true
      id: docker_build_jetty
      name: Build & push jetty
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.jetty
        labels: ${{ steps.docker_meta_jetty.outputs.labels }}
        platforms: linux/amd64, linux/arm64
        push: false
        tags: ${{ steps.docker_meta_jetty.outputs.tags }}
  publish-pages:
    needs:
    - publish-releases
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      name: Create GitHub Pages
      run: mvn site
    - continue-on-error: true
      name: Deploy GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site
  publish-releases:
    needs:
    - build-jdk11
    - build-jdk8
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: retrieve generated war files (jre8)
      uses: actions/download-artifact@v3
      with:
        name: war-jre8
        path: artifacts
    - continue-on-error: true
      name: retrieve generated war files (jre11)
      uses: actions/download-artifact@v3
      with:
        name: war-jre11
        path: artifacts
    - continue-on-error: true
      name: display structure of downloaded files
      run: ls -lah artifacts
    - continue-on-error: true
      name: upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        file: artifacts/plantuml*.war
        file_glob: true
        overwrite: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
name: Main
on:
  repository_dispatch:
    types: trigger-ga___main.yml
