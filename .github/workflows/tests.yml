jobs:
  test-embedded:
    needs: test-mvn-livecycle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Run tests against jetty embedded server
      run: mvn --batch-mode clean test -DskipTests=false -Dgroups=\!graphviz-test
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-java-8-war:
    needs: test-java-8-war-generation
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: retrieve generated files (jre8)
      uses: actions/download-artifact@v3
      with:
        name: war-jre8
        path: artifacts
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Prepare jetty-runner tests
      run: mvn --batch-mode clean package
    - continue-on-error: true
      name: Start jetty server over jetty-runner
      run: java -jar target/dependency/jetty-runner.jar --config src/main/config/jetty.xml
        --path /plantuml artifacts/plantuml.war &
    - continue-on-error: true
      name: Wait 5 seconds (to let jetty-runner start the jetty server)
      run: sleep 5s
    - continue-on-error: true
      name: Run tests against "mvn jetty:run" server
      run: mvn --batch-mode test -DskipTests=false -Dgroups=\!graphviz-test -DargLine="-Dsystem.test.server=http://localhost:8080/plantuml"
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-java-8-war-generation:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Remove test code (not java 8 compatible)
      run: rm -rf src/test
    - continue-on-error: true
      name: Generate war file (including apache-jsp artifact)
      run: mvn --batch-mode -f pom.jdk8.xml -D java.net.useSystemProxies=true -Dapache-jsp.scope=compile
        clean package
    - continue-on-error: true
      name: Generate war file
      run: mvn --batch-mode -f pom.jdk8.xml -D java.net.useSystemProxies=true clean
        package
    - continue-on-error: true
      name: temporarily save generated files
      uses: actions/upload-artifact@v3
      with:
        name: war-jre8
        path: target/plantuml.war
        retention-days: 1
  test-jetty:
    needs: test-mvn-livecycle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Prepare external tests
      run: mvn --batch-mode clean test
    - continue-on-error: true
      name: Build the jetty docker stack
      run: 'docker image build -f Dockerfile.jetty -t plantuml-server:local .

        docker run -d --hostname=test.localhost -p 8080:8080 -e BASE_URL=plantuml
        plantuml-server:local

        '
    - continue-on-error: true
      name: Check running containers
      run: docker ps
    - continue-on-error: true
      name: run tests against jetty docker image
      run: mvn --batch-mode test -DskipTests=false -DargLine="-Dsystem.test.server=http://localhost:8080/plantuml"
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-jetty-runner:
    needs: test-mvn-livecycle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Prepare jetty-runner tests
      run: mvn --batch-mode clean package
    - continue-on-error: true
      name: Start jetty server over jetty-runner
      run: java -jar target/dependency/jetty-runner.jar --config src/main/config/jetty.xml
        --path /plantuml target/plantuml.war &
    - continue-on-error: true
      name: Wait 5 seconds (to let jetty-runner start the jetty server)
      run: sleep 5s
    - continue-on-error: true
      name: Run tests against "mvn jetty:run" server
      run: mvn --batch-mode test -DskipTests=false -Dgroups=\!graphviz-test -DargLine="-Dsystem.test.server=http://localhost:8080/plantuml"
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-mvn-jetty-run:
    needs: test-mvn-livecycle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Prepare "mvn jetty:run" tests
      run: mvn --batch-mode clean test
    - continue-on-error: true
      name: Start jetty server over maven
      run: mvn --batch-mode jetty:run &
    - continue-on-error: true
      name: Wait 20 seconds (to let maven start the jetty server)
      run: sleep 20s
    - continue-on-error: true
      name: Run tests against "mvn jetty:run" server
      run: mvn --batch-mode test -DskipTests=false -Dgroups=\!graphviz-test -DargLine="-Dsystem.test.server=http://localhost:8080/plantuml"
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-mvn-livecycle:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Lifecycle - Step 1/8 - mvn clean
      run: mvn --batch-mode clean
    - continue-on-error: true
      name: Lifecycle - Step 2/8 - mvn validate
      run: mvn --batch-mode validate
    - continue-on-error: true
      name: Lifecycle - Step 3/8 - mvn compile
      run: mvn --batch-mode compile
    - continue-on-error: true
      name: Lifecycle - Step 4/8 - mvn test (with skipTests=true)
      run: mvn --batch-mode test
    - continue-on-error: true
      name: Lifecycle - Step 5/8 - mvn package
      run: mvn --batch-mode package
    - continue-on-error: true
      name: Lifecycle - Step 6/8 - mvn verify
      run: mvn --batch-mode verify
    - continue-on-error: true
      name: Lifecycle - Step 7/8 - mvn install
      run: mvn --batch-mode install
    - continue-on-error: true
      name: Lifecycle - Step 8/8 - mvn site
      run: mvn --batch-mode site
    strategy:
      matrix:
        java-version:
        - 11
        - 17
  test-tomcat:
    needs: test-mvn-livecycle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        check-latest: true
        distribution: zulu
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      name: Prepare external tests
      run: mvn --batch-mode clean test
    - continue-on-error: true
      name: Build the tomcat docker stack
      run: 'docker image build -f Dockerfile.tomcat -t plantuml-server:local .

        docker run -d --hostname=test.localhost -p 8080:8080 -e BASE_URL=plantuml
        plantuml-server:local

        '
    - continue-on-error: true
      name: Check running containers
      run: docker ps
    - continue-on-error: true
      name: run tests against tomcat docker image
      run: mvn --batch-mode test -DskipTests=false -DargLine="-Dsystem.test.server=http://localhost:8080/plantuml"
    strategy:
      matrix:
        java-version:
        - 11
        - 17
name: Tests
on:
  repository_dispatch:
    types: trigger-ga___tests.yml
